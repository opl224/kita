
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isSuperUser() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isSuperUser == true;
    }

    match /users/{userId} {
      allow read;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isSuperUser();
    }
    
    match /appState/{state} {
        allow read: if request.auth.uid != null;
        allow write: if isSuperUser();
    }
    
    match /userFeedback/{feedbackId} {
        allow create: if request.auth.uid != null;
        allow read: if isSuperUser();
    }
    
    match /posts/{postId} {
        allow read, list: if request.auth.uid != null;
        allow create, update, delete: if request.resource.data.userId == request.auth.uid;
    }
    
    match /groups/{groupId} {
        allow list, read: if request.auth.uid in resource.data.members;
        allow create: if isSuperUser() || request.auth.uid == request.resource.data.createdBy;
        allow update: if isSuperUser() || request.auth.uid == resource.data.createdBy;
        allow delete: if isSuperUser() || request.auth.uid == resource.data.createdBy;

        match /messages/{messageId} {
            allow read, list, create: if request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.members;
            allow delete: if request.auth.uid == resource.data.senderId;
        }
    }
    
    match /invitations/{invitationId} {
        allow read: if request.auth.uid == resource.data.userId;
        allow create: if isSuperUser();
        allow update: if request.auth.uid == resource.data.userId;
    }
    
    match /users/{userId}/notifications/{notificationId} {
      allow read, list: if request.auth.uid == userId;
      allow create: if isSuperUser();
    }
  }
}
