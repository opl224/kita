rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isSuperUser() {
      return request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid)) && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isSuperUser == true;
    }

    match /users/{userId} {
      allow read;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isSuperUser();
      
      match /notifications/{notificationId} {
        allow read: if request.auth.uid == userId;
        allow create: if isSuperUser();
      }
    }
    
    match /appState/main {
      allow read: if request.auth.uid != null;
      allow write: if isSuperUser();
    }
    
    match /userFeedback/{feedbackId} {
        allow read: if isSuperUser();
        allow create: if request.auth.uid == request.resource.data.userId;
    }

    match /posts/{postId} {
        allow read: if request.auth.uid != null;
        allow create: if request.auth.uid == request.resource.data.userId;
        allow update: if (request.auth.uid == resource.data.userId) || 
                       (request.auth.uid != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes']));
        allow delete: if request.auth.uid == resource.data.userId;
    }
    
    match /groups/{groupId} {
      allow list, read: if request.auth.uid in resource.data.members;
      allow create: if isSuperUser() || request.auth.uid == request.resource.data.createdBy;
      allow update: if (isSuperUser() || request.auth.uid == resource.data.createdBy) ||
                       (request.auth.uid in request.resource.data.members && !(request.auth.uid in resource.data.members));
      allow delete: if isSuperUser() || request.auth.uid == resource.data.createdBy;

      match /messages/{messageId} {
          allow read: if request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.members;
          allow create: if request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.members;
          allow delete: if request.auth.uid == resource.data.senderId;
      }
    }
    
    match /invitations/{invitationId} {
        allow read: if request.auth.uid == resource.data.userId;
        allow create: if isSuperUser();
        allow update: if request.auth.uid == resource.data.userId;
    }
  }
}
