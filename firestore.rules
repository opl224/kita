rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isSuperUser() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isSuperUser == true;
    }
    
    function isUser(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if isUser(userId);
      allow list: if isSuperUser();
    }
    
    match /users/{userId}/notifications/{notificationId} {
      allow read: if isUser(userId) || isSuperUser();
      allow create: if isSuperUser();
    }
    
    match /appState/{state} {
      allow read: if request.auth != null;
      allow write: if isSuperUser();
    }
    
    match /posts/{postId} {
      allow read, create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.userId;
    }

    match /userFeedback/{feedbackId} {
      allow create: if request.auth != null;
    }
    
    match /groups/{groupId} {
      allow read: if request.auth.uid in resource.data.members;
      allow create: if isSuperUser();
      allow update: if request.auth.uid == resource.data.createdBy || isSuperUser() || 
                      (request.resource.data.members == resource.data.members.concat([request.auth.uid]) && !(request.auth.uid in resource.data.members));
      allow delete: if request.auth.uid == resource.data.createdBy || isSuperUser();
      
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.members;
        allow delete: if request.auth.uid == resource.data.senderId;
      }
    }
    
    match /invitations/{invitationId} {
        allow create: if isSuperUser();
        allow read, update: if request.auth.uid == resource.data.userId;
    }
  }
}
